apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion 19
    buildToolsVersion '20.0.0'

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']

            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']

            renderscript.srcDirs = ['src']

            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
        androidTest.setRoot('tests')
    }

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 21
        versionCode 1
        versionName '1.0'
    }
}

ext.siteUrl = 'https://github.com/navasmdc/BorderMenu'
ext.issueUrl = 'https://github.com/navasmdc/BorderMenu/issues'
ext.gitUrl = 'https://github.com/navasmdc/BorderMenu.git'

bintray {
    user = hasProperty('BINTRAY_USER') ? BINTRAY_USER : "navasmdc"
    key = hasProperty('BINTRAY_KEY') ? BINTRAY_PASSWORD : "c27d6095b4b3880b5eacf18a5eed3a4ed582e5f3"

    configurations = ["archives"]
    pkg {
        repo = 'maven'
        name = 'BorderMenu'
        desc = 'Different lateral menu for your Android apps'
        websiteUrl = siteUrl
        issueTrackerUrl = issueUrl
        vcsUrl = gitUrl
        licenses = ['Apache-2.0']
        labels = []
        publicDownloadNumbers = true
    }
}

dependencies {
    compile 'com.nineoldandroids:library:2.4.+'
    compile 'com.android.support:support-v4:21.+'
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'BorderMenu'
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'navasmdc'
                        name 'Iv√°n Navas'
                        email 'i.navas.mdc@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

task findConventions << {
    println project.getConvention()
}

